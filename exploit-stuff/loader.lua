local loaderiiil111l1lIi1l1I111 = assert local loaderliIli1Il1l11IiiliII = select local loaderiIIl1I1IIiIl1l11iII = tonumber local loaderIl1I1lllll11I1111Ii = unpack local loaderI1iIliliIi1l1lIIiII = pcall local loaderlIll1iIlIii11ll1i1Ili = setfenv local loaderli1illiiIlil1lI1i1I = setmetatable local loaderil1i1Iil1lIlIllili1 = type local loaderli1iIIll1iII1I1iIii = getfenv local loaderiili1lililiI1iIIIll = tostring local loaderlIlliIi1II11Il1ii11Il = error local loaderlI1IIil1lllIl1i1lil = string.sub local loaderlIlilIlIllIIll1iIl1Ii = string.byte local loaderllI1IIl11liiliiIIli = string.char local loaderl1lI1ll1IilIl1iIi11 = string.rep local loaderlIlIiIlilillIIl1iIII1 = string.gsub local loaderIl1i1i1IiI1lll11lil = string.match local loaderlIl11ilIllIilil1Iil1I = loaderlIlilIlIllIIll1iIl1Ii("C", 1) local loaderiIliiiIi1li11IIIiii, loaderIlI1lI11Il1i1IlIili = #{6961}, #{ 5993, 1148, 3466, 980, 854, 1570, 4133, 1894, 1156, 5230, 2319, 5958, 369, 6558, 2160, 43, 2308, 5267, 3454, 4340, 4508 } + loaderlIl11ilIllIilil1Iil1I + 130983 local loaderlIl1ii1li1i11iii1iIll = {} local loaderllI1IIlIliiliIi1ll1 = 1 local function loaderlI1Ili1Iil11iIIlIII(loaderIi1iIllI1lil1iilIli, loaderIIli1l1lll1i1i1lIii) local loaderI1il11llIlIII1i1lli loaderIi1iIllI1lil1iilIli = loaderlIlIiIlilillIIl1iIII1(loaderlI1IIil1lllIl1i1lil(loaderIi1iIllI1lil1iilIli, 5), "..", function(loaderi1li11lIIi1ll1ilIl1) if loaderlIlilIlIllIIll1iIl1Ii(loaderi1li11lIIi1ll1ilIl1, 2) == 72 then loaderI1il11llIlIII1i1lli = loaderiIIl1I1IIiIl1l11iII(loaderlI1IIil1lllIl1i1lil(loaderi1li11lIIi1ll1ilIl1, 1, 1)) return "" else local loaderll1il1iIlll1l1lIli1 = loaderllI1IIl11liiliiIIli(loaderiIIl1I1IIiIl1l11iII(loaderi1li11lIIi1ll1ilIl1, 16)) if loaderI1il11llIlIII1i1lli then local loaderI1llIiiii1ii1lI11lI = loaderl1lI1ll1IilIl1iIi11(loaderll1il1iIlll1l1lIli1, loaderI1il11llIlIII1i1lli) loaderI1il11llIlIII1i1lli = nil return loaderI1llIiiii1ii1lI11lI else return loaderll1il1iIlll1l1lIli1 end end end) local function loaderlIlI1iiII1ilI1111i1() local loaderI1I1llli11II1iIiiiI = loaderlIlilIlIllIIll1iIl1Ii(loaderIi1iIllI1lil1iilIli, loaderllI1IIlIliiliIi1ll1, loaderllI1IIlIliiliIi1ll1) loaderllI1IIlIliiliIi1ll1 = loaderllI1IIlIliiliIi1ll1 + 1 return loaderI1I1llli11II1iIiiiI end local function loaderlIlli1Il1iliI1i1I1I1I() local loaderI1I1llli11II1iIiiiI, loaderll1il1iIlll1l1lIli1, loaderI1llIiiii1ii1lI11lI, loaderiIil1iII11liI1liI1i = loaderlIlilIlIllIIll1iIl1Ii(loaderIi1iIllI1lil1iilIli, loaderllI1IIlIliiliIi1ll1, loaderllI1IIlIliiliIi1ll1 + 3) loaderllI1IIlIliiliIi1ll1 = loaderllI1IIlIliiliIi1ll1 + 4 return loaderiIil1iII11liI1liI1i * 16777216 + loaderI1llIiiii1ii1lI11lI * 65536 + loaderll1il1iIlll1l1lIli1 * 256 + loaderI1I1llli11II1iIiiiI end local function loaderi1i1II1i11iI1iiIIl1(loaderIiii111Illi1Ii1illl, loaderI1IlIIlIiIllli1l1lI, loaderIi1I1l1iili1il1iil1) if loaderIi1I1l1iili1il1iil1 then local loaderl1lillll1Ilil1lll1l, loaderIiIIliiiiiI1lliII1i = 0, 0 for loaderi1l1iIIlI1liI1i1Ii1 = loaderI1IlIIlIiIllli1l1lI, loaderIi1I1l1iili1il1iil1 do loaderl1lillll1Ilil1lll1l = loaderl1lillll1Ilil1lll1l + 2 ^ loaderIiIIliiiiiI1lliII1i * loaderi1i1II1i11iI1iiIIl1(loaderIiii111Illi1Ii1illl, loaderi1l1iIIlI1liI1i1Ii1) loaderIiIIliiiiiI1lliII1i = loaderIiIIliiiiiI1lliII1i + 1 end return loaderl1lillll1Ilil1lll1l else local loaderIi1l1Iilill1lliiIll = 2 ^ (loaderI1IlIIlIiIllli1l1lI - 1) return loaderIi1l1Iilill1lliiIll <= loaderIiii111Illi1Ii1illl % (loaderIi1l1Iilill1lliiIll + loaderIi1l1Iilill1lliiIll) and 1 or 0 end end local function loaderlIlIlliillI1Ii1IIlII1() local loaderI1I1llli11II1iIiiiI, loaderll1il1iIlll1l1lIli1 = loaderlIlli1Il1iliI1i1I1I1I(), loaderlIlli1Il1iliI1i1I1I1I() if loaderI1I1llli11II1iIiiiI == 0 and loaderll1il1iIlll1l1lIli1 == 0 then return 0 end return (-2 * loaderi1i1II1i11iI1iiIIl1(loaderll1il1iIlll1l1lIli1, 32) + 1) * 2 ^ (loaderi1i1II1i11iI1iiIIl1(loaderll1il1iIlll1l1lIli1, 21, 31) - 1023) * ((loaderi1i1II1i11iI1iiIIl1(loaderll1il1iIlll1l1lIli1, 1, 20) * 4294967296 + loaderI1I1llli11II1iIiiiI) / 4503599627370496 + 1) end local function loaderil1I111l1i1lI1iliiI(loaderIl1Il1IIliIl1i1ilII) local loaderI1l1ill1II1llIll1I1 = { loaderlIlilIlIllIIll1iIl1Ii(loaderIi1iIllI1lil1iilIli, loaderllI1IIlIliiliIi1ll1, loaderllI1IIlIliiliIi1ll1 + 3) } loaderllI1IIlIliiliIi1ll1 = loaderllI1IIlIliiliIi1ll1 + 4 local loaderlIl1I1iI1Ili1I11Ilili = { nil, nil, nil, nil, nil, nil, nil, nil } for loaderi1l1iIIlI1liI1i1Ii1 = 1, 8 do loaderlIl1I1iI1Ili1I11Ilili[loaderi1l1iIIlI1liI1i1Ii1] = loaderi1i1II1i11iI1iiIIl1(loaderIl1Il1IIliIl1i1ilII, loaderi1l1iIIlI1liI1i1Ii1) end local loaderlIl1llii1lllI1l11li1i = "" for loaderi1l1iIIlI1liI1i1Ii1 = 1, 4 do local loaderl1lillll1Ilil1lll1l, loaderIiIIliiiiiI1lliII1i = 0, 0 for loaderlIliiIiiIIll1lIIiil1l = 1, 8 do local loaderI1illIiiI1IiIl1lIIl = loaderi1i1II1i11iI1iiIIl1(loaderI1l1ill1II1llIll1I1[loaderi1l1iIIlI1liI1i1Ii1], loaderlIliiIiiIIll1lIIiil1l) if loaderlIl1I1iI1Ili1I11Ilili[loaderlIliiIiiIIll1lIIiil1l] == 1 then loaderI1illIiiI1IiIl1lIIl = loaderI1illIiiI1IiIl1lIIl == 1 and 0 or 1 end loaderl1lillll1Ilil1lll1l = loaderl1lillll1Ilil1lll1l + 2 ^ loaderIiIIliiiiiI1lliII1i * loaderI1illIiiI1IiIl1lIIl loaderIiIIliiiiiI1lliII1i = loaderIiIIliiiiiI1lliII1i + 1 end loaderlIl1llii1lllI1l11li1i = loaderlIl1llii1lllI1l11li1i .. loaderlIl1llii1lllI1l11li1i.char(loaderl1lillll1Ilil1lll1l) end local loaderI1I1llli11II1iIiiiI, loaderll1il1iIlll1l1lIli1, loaderI1llIiiii1ii1lI11lI, loaderiIil1iII11liI1liI1i = loaderlIlilIlIllIIll1iIl1Ii(loaderlIl1llii1lllI1l11li1i, 1, 4) return loaderiIil1iII11liI1liI1i * 16777216 + loaderI1llIiiii1ii1lI11lI * 65536 + loaderll1il1iIlll1l1lIli1 * 256 + loaderI1I1llli11II1iIiiiI end local function loaderl1l11l11Ii1lIIi1ll1(loaderIl1Il1IIliIl1i1ilII) local loaderiiIii11iiIlIilllIii = loaderlIlli1Il1iliI1i1I1I1I() loaderllI1IIlIliiliIi1ll1 = loaderllI1IIlIliiliIi1ll1 + loaderiiIii11iiIlIilllIii local loaderlIl1I1iI1Ili1I11Ilili = { nil, nil, nil, nil, nil, nil, nil, nil } for loaderi1l1iIIlI1liI1i1Ii1 = 1, 8 do loaderlIl1I1iI1Ili1I11Ilili[loaderi1l1iIIlI1liI1i1Ii1] = loaderi1i1II1i11iI1iiIIl1(loaderIl1Il1IIliIl1i1ilII, loaderi1l1iIIlI1liI1i1Ii1) end local loaderlIl1llii1lllI1l11li1i = "" for loaderi1l1iIIlI1liI1i1Ii1 = 1, loaderiiIii11iiIlIilllIii do local loaderl1lillll1Ilil1lll1l, loaderIiIIliiiiiI1lliII1i = 0, 0 for loaderlIliiIiiIIll1lIIiil1l = 1, 8 do local loaderI1illIiiI1IiIl1lIIl = loaderi1i1II1i11iI1iiIIl1(loaderlIlilIlIllIIll1iIl1Ii(loaderIi1iIllI1lil1iilIli, loaderllI1IIlIliiliIi1ll1 - loaderiiIii11iiIlIilllIii + loaderi1l1iIIlI1liI1i1Ii1 - 1), loaderlIliiIiiIIll1lIIiil1l) if loaderlIl1I1iI1Ili1I11Ilili[loaderlIliiIiiIIll1lIIiil1l] == 1 then loaderI1illIiiI1IiIl1lIIl = loaderI1illIiiI1IiIl1lIIl == 1 and 0 or 1 end loaderl1lillll1Ilil1lll1l = loaderl1lillll1Ilil1lll1l + 2 ^ loaderIiIIliiiiiI1lliII1i * loaderI1illIiiI1IiIl1lIIl loaderIiIIliiiiiI1lliII1i = loaderIiIIliiiiiI1lliII1i + 1 end loaderlIl1llii1lllI1l11li1i = loaderlIl1llii1lllI1l11li1i .. loaderlIl1llii1lllI1l11li1i.char(loaderl1lillll1Ilil1lll1l) end return loaderlIl1llii1lllI1l11li1i end local loaderllII11iiII111IIlli1 = loaderlIlI1iiII1ilI1111i1() local loaderIIlIIilIi1il1IIiiil = loaderlIlI1iiII1ilI1111i1() local function loaderlIliII1IiI1iii1illIil() local loaderlIlII1iIiIIliillI1ili = { [65955] = {}, [35856] = {}, [41365] = {}, [107048] = {} } loaderlIlI1iiII1ilI1111i1() local loaderi1I1lII1lIi1iilIlii = loaderlIlli1Il1iliI1i1I1I1I() for loaderi1l1iIIlI1liI1i1Ii1 = loaderiIliiiIi1li11IIIiii, loaderi1I1lII1lIi1iilIlii do loaderlIlII1iIiIIliillI1ili[35856][loaderi1l1iIIlI1liI1i1Ii1] = loaderlIlli1Il1iliI1i1I1I1I() end loaderlIlI1iiII1ilI1111i1() local loaderi1I1lII1lIi1iilIlii = loaderlIlli1Il1iliI1i1I1I1I() for loaderi1l1iIIlI1liI1i1Ii1 = loaderiIliiiIi1li11IIIiii, loaderi1I1lII1lIi1iilIlii do loaderlIlII1iIiIIliillI1ili[65955][loaderi1l1iIIlI1liI1i1Ii1 - loaderiIliiiIi1li11IIIiii] = loaderlIliII1IiI1iii1illIil() end local loaderi1I1lII1lIi1iilIlii = loaderlIlli1Il1iliI1i1I1I1I() - (#{ 2880, 3998, 4657, 1256, 5916, 1162, 5427, 819, 2403, 3124, 2547, 3412, 269, 5073, 6157, 2424, 1267, 3255, 6121, 3155, 6681, 4424, 4451 } + loaderlIl11ilIllIilil1Iil1I + 133697) for loaderi1l1iIIlI1liI1i1Ii1 = loaderiIliiiIi1li11IIIiii, loaderi1I1lII1lIi1iilIlii do local loaderIiilI1i11iIiii1lIli = {} local loaderil1i1Iil1lIlIllili1 = loaderlIlI1iiII1ilI1111i1() if loaderil1i1Iil1lIlIllili1 == #{ 3773, 338, 5036, 4568, 2925, 3547, 2358, 2270, 3222, 3371, 1404, 157, 4452, 708, 4746, 2368, 223, 5641, 1824, 3267, 4453, 2408, 3014, 1691 } + loaderlIl11ilIllIilil1Iil1I + -37 then loaderIiilI1i11iIiii1lIli[11517] = loaderlIlIlliillI1Ii1IIlII1() end if loaderil1i1Iil1lIlIllili1 == #{ 5861, 875, 1883, 2964, 4885, 3976, 3109, 5411, 2938, 6365, 5158, 5023, 916, 6942, 4931, 6805, 5144, 6710, 2584, 2423, 3213, 2571, 37, 5097 } + loaderlIl11ilIllIilil1Iil1I + -11 then loaderIiilI1i11iIiii1lIli[11517] = #{ 3520, 3334, 1603, 3799, 2926, 3873, 896, 6900, 1526, 6318, 4045, 5610, 1598, 5903, 3005, 6717, 2271, 701, 1870, 6692, 4143, 3731, 275, 482 } + loaderlIl11ilIllIilil1Iil1I + 88141 == #{ 3520, 3334, 1603, 3799, 2926, 3873, 896, 6900, 1526, 6318, 4045, 5610, 1598, 5903, 3005, 6717, 2271, 701, 1870, 6692, 4143, 3731, 275, 482 } + loaderlIl11ilIllIilil1Iil1I + 88141 end if loaderil1i1Iil1lIlIllili1 == #{ 6740, 5279, 90, 3998, 3837, 3132, 5509, 2316, 2304, 1819, 3216, 3743, 4642, 945, 2602, 5735, 3359, 1103, 3939, 4233, 1246, 4032, 981, 4860 } + loaderlIl11ilIllIilil1Iil1I + 131 then loaderIiilI1i11iIiii1lIli[11517] = loaderl1l11l11Ii1lIIi1ll1(loaderllII11iiII111IIlli1) end if loaderil1i1Iil1lIlIllili1 == #{ 6869, 2304, 1790, 1343, 118, 1626, 2140, 3080, 1320, 2114, 2349, 3952, 5247, 6006, 88, 3292, 4585, 4072, 2172, 5300, 1169, 1075 } + loaderlIl11ilIllIilil1Iil1I + -23 then loaderIiilI1i11iIiii1lIli[11517] = loaderlIlIlliillI1Ii1IIlII1() + loaderlIlIlliillI1Ii1IIlII1() end if loaderil1i1Iil1lIlIllili1 == #{ 2191, 941, 1529, 2612, 5567, 807, 3240, 4668, 1139, 5639, 5002, 4958, 4880, 2729, 1044, 5094, 1052, 798, 6966, 1702, 2535, 4549, 3146, 3697 } + loaderlIl11ilIllIilil1Iil1I + 154 then loaderIiilI1i11iIiii1lIli[11517] = loaderlIlIlliillI1Ii1IIlII1() + loaderlIlIlliillI1Ii1IIlII1() end if loaderil1i1Iil1lIlIllili1 == #{ 660, 2712, 2643, 283, 5360, 188 } then loaderIiilI1i11iIiii1lIli[11517] = loaderlIlIlliillI1Ii1IIlII1() + loaderlIlIlliillI1Ii1IIlII1() end if loaderil1i1Iil1lIlIllili1 == #{ 220, 1098, 4818, 5769, 5222, 2665, 6288, 3892, 4436, 1520, 3133, 1878, 6645, 5340, 5087, 807, 2780, 4639, 5052, 4673, 5388, 6420, 5284, 6393 } + loaderlIl11ilIllIilil1Iil1I + 112 then loaderIiilI1i11iIiii1lIli[11517] = #{ 3265, 3278, 5250, 427, 3204, 6290, 3162, 1191, 2943, 3256, 6912, 1111, 5998, 1829, 4290, 1768, 1002, 5649, 5253, 1627, 4651 } + loaderlIl11ilIllIilil1Iil1I + 63989 == #{ 5763, 5087, 5842, 72, 2108, 5629, 4253, 5539, 2814, 6319, 468, 1661, 4456, 4768, 405, 890, 328, 4108, 4600, 806, 2806, 3739 } + loaderlIl11ilIllIilil1Iil1I + 102105 end if loaderil1i1Iil1lIlIllili1 == #{ 6152, 6259, 1303, 2500, 1959, 6963, 5558, 432, 6831, 5331, 898, 6520, 3519, 4895, 5470, 6580, 6365, 1569, 532, 5731 } + loaderlIl11ilIllIilil1Iil1I + -12 then loaderIiilI1i11iIiii1lIli[11517] = loaderlIlIlliillI1Ii1IIlII1() + loaderlIlIlliillI1Ii1IIlII1() end if loaderil1i1Iil1lIlIllili1 == #{ 5350, 5539, 1769, 3178, 2208, 2942, 3903, 2887, 4106, 4578, 5575, 2521, 3340, 5989, 5983, 621, 5720, 615, 433, 5139, 4379, 5736, 4005 } + loaderlIl11ilIllIilil1Iil1I + -55 then loaderIiilI1i11iIiii1lIli[11517] = loaderlIlIlliillI1Ii1IIlII1() end loaderlIlII1iIiIIliillI1ili[41365][loaderi1l1iIIlI1liI1i1Ii1 - loaderiIliiiIi1li11IIIiii] = loaderIiilI1i11iIiii1lIli end loaderlIlI1iiII1ilI1111i1() loaderlIlI1iiII1ilI1111i1() local loaderi1I1lII1lIi1iilIlii = loaderlIlli1Il1iliI1i1I1I1I() - (#{ 5291, 3015, 5148, 6126, 3956, 3703, 6819, 6892, 5069, 4619, 2351, 4531, 2613, 1030, 6378, 206, 1172, 6527, 659, 6134, 189 } + loaderlIl11ilIllIilil1Iil1I + 133665) for loaderi1l1iIIlI1liI1i1Ii1 = loaderiIliiiIi1li11IIIiii, loaderi1I1lII1lIi1iilIlii do local loaderi1il1iiI1ii1iI1IiIl = {} local loaderiIlll1lIIllii11i1l1 = loaderil1I111l1i1lI1iliiI(loaderIIlIIilIi1il1IIiiil) loaderi1il1iiI1ii1iI1IiIl[112246] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{ 530, 5969, 6849, 2422, 456, 2966, 1351, 1619, 5714, 2983, 6444, 4504, 1064, 6054, 1543, 786, 5496, 6697, 4418, 5741 } + loaderlIl11ilIllIilil1Iil1I + -60, #{ 5875, 4418, 6477, 6371, 282, 1650, 284, 5155, 265, 4485, 826, 2035, 445, 492, 2823, 2821, 383, 4542, 342, 4790, 696, 172 } + loaderlIl11ilIllIilil1Iil1I + -57) loaderi1il1iiI1ii1iI1IiIl[27309] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{ 437, 4596, 1074, 2263, 2003, 4817, 6911, 2443, 722, 519 }, #{ 2110, 6832, 245, 4375, 6051, 2253, 3159, 3177, 61, 6241, 992, 2895, 219, 465, 4847, 5760, 1429, 5716 }) loaderi1il1iiI1ii1iI1IiIl[35018] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{2996}, #{ 1664, 5083, 4125, 2444, 4975, 751, 1167, 5399, 2199, 1089, 6261, 1535, 1607, 5852, 523, 4481, 5453, 3991 }) loaderi1il1iiI1ii1iI1IiIl[31473] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{ 4601, 3848, 4355, 5814, 271, 406, 6713, 5766, 2942, 405, 5740, 983, 2865, 4954, 139, 3173, 91, 4100, 5628, 2756 } + loaderlIl11ilIllIilil1Iil1I + -60, #{ 5595, 1540, 959, 1126, 6962, 3747, 3510, 5693, 6307, 4796, 335, 6182, 4892, 6057, 3059, 6616, 3542, 1014, 4628, 4400, 4109, 6845, 5897, 806 } + loaderlIl11ilIllIilil1Iil1I + -59) loaderi1il1iiI1ii1iI1IiIl[122525] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{525}, #{ 2005, 2013, 2985, 3135, 3387, 6695, 1977, 5830, 4627 }) loaderi1il1iiI1ii1iI1IiIl[86990] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{ 582, 2514, 623, 3756, 2326, 5534, 2913, 1744, 6799, 3165, 4326, 4143, 1532, 2852, 4685, 4272, 6857, 2327, 5007 }, #{ 6232, 3334, 357, 5839, 6298, 1240, 1140, 1692, 3261, 3601, 208, 6452, 4114, 5097, 6851, 2595, 5500, 5139, 4625, 1142, 5498, 3536 } + loaderlIl11ilIllIilil1Iil1I + -63) loaderi1il1iiI1ii1iI1IiIl[127047] = loaderi1i1II1i11iI1iiIIl1(loaderiIlll1lIIllii11i1l1, #{6751}, #{ 2598, 6193, 2676, 1311, 6903, 1426, 4548, 1685, 5990, 5129, 2386, 3383, 5247, 1196, 3490, 6787, 6686, 3465 }) loaderlIlII1iIiIIliillI1ili[107048][loaderi1l1iIIlI1liI1i1Ii1] = loaderi1il1iiI1ii1iI1IiIl end loaderlIlli1Il1iliI1i1I1I1I() loaderlIlII1iIiIIliillI1ili[112689] = loaderlIlI1iiII1ilI1111i1() loaderlIlli1Il1iliI1i1I1I1I() loaderlIlli1Il1iliI1i1I1I1I() loaderlIlI1iiII1ilI1111i1() loaderlIlli1Il1iliI1i1I1I1I() loaderlIlli1Il1iliI1i1I1I1I() loaderlIlI1iiII1ilI1111i1() loaderlIlII1iIiIIliillI1ili[60466] = loaderlIlI1iiII1ilI1111i1() loaderlIlII1iIiIIliillI1ili[116430] = loaderlIlI1iiII1ilI1111i1() loaderlIlli1Il1iliI1i1I1I1I() loaderlIlI1iiII1ilI1111i1() loaderlIlli1Il1iliI1i1I1I1I() return loaderlIlII1iIiIIliillI1ili end local function loaderlIIiIilii11111lIiI1(loaderlIlII1iIiIIliillI1ili, loaderIIli1l1lll1i1i1lIii, loaderlIliiiliIilli11li1lii) local loaderlIl1i1ilIIl1li1ii1I1l, loaderII1li1IiiI1I1lII11i = 24, 32 local loaderlIlIlIiIi1Il1lli1I1Ii = loaderlIlII1iIiIIliillI1ili[107048] local loaderI1liI11ll11lIil1lll = loaderli1illiiIlil1lI1i1I({}, { __index = function(loaderliilliIlililIil1lii, loaderlIl1lilIIli1IIiiililI) local loaderlIl1llii1lllI1l11li1i = loaderlIlII1iIiIIliillI1ili[41365][loaderlIl1lilIIli1IIiiililI] if loaderlI1IIil1lllIl1i1lil(loaderil1i1Iil1lIlIllili1(loaderlIl1llii1lllI1l11li1i[11517]), 1, 1) == "s" then return { [11517] = loaderlI1IIil1lllIl1i1lil(loaderlIl1llii1lllI1l11li1i[11517], 2) } end return loaderlIl1llii1lllI1l11li1i end }) local loaderlIl1IIl1illlIiliIii1i = 60466 local loaderIIIIllIi1lIl11iiIl1 = loaderlIlII1iIiIIliillI1ili[65955] local loaderlIllI1I11iIiliIIiilIl = 11517 local loaderl1iIIi1i11I1llIli1l = loaderlIlII1iIiIIliillI1ili[116430] local loaderlIliilIlllilIl1li1iIl = 31473 local loaderI1lIiil1l11lIl1iiIl = loaderlIlII1iIiIIliillI1ili[35856] local loaderliIl1illllliIiIIIil = 122525 local function loaderlIll1IIl1Il1ii1IIII1i(...) local loaderiIi1lllI11IIlIl1IIi = 0 local loaderIllil1ll11Ii1i1Iii1 = { loaderIl1I1lllll11I1111Ii({}, 1, loaderlIlII1iIiIIliillI1ili[112689]) } local loaderiII1l1I11liiiIiIl1I = 1 local loaderl1iIi1li1II1ilII1ll = {} local loaderl1l1Ili1li11Iillli1 = {} local loaderlii1i1l11i1Ii1ilI11 = 1 local loaderIIli1l1lll1i1i1lIii = loaderli1iIIll1iII1I1iIii() local loaderl1IlIliIl1lli1lIl1l = { ... } local loaderilII11iiI1iIii11iII = #loaderl1IlIliIl1lli1lIl1l - 1 for loaderi1l1iIIlI1liI1i1Ii1 = 0, loaderilII11iiI1iIii11iII do if loaderi1l1iIIlI1liI1i1Ii1 < loaderl1iIIi1i11I1llIli1l then loaderIllil1ll11Ii1i1Iii1[loaderi1l1iIIlI1liI1i1Ii1] = loaderl1IlIliIl1lli1lIl1l[loaderi1l1iIIlI1liI1i1Ii1 + 1] end end local function loaderlIlII1IIiIliil1lllil1(...) local loaderI1llIiiii1ii1lI11lI = loaderliIli1Il1l11IiiliII("#", ...) local loaderliilliIlililIil1lii = { ... } return loaderI1llIiiii1ii1lI11lI, loaderliilliIlililIil1lii end local function loaderlllII1Ii1IIII1liiI1() while true do local loaderi1l1IiilI1IIIil111I = loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] local loaderiI1i1IlIllIIiIiiI1i = loaderi1l1IiilI1IIIil111I[31473] loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 local loaderIl1li1ilI1lii1IillI = loaderi1l1IiilI1IIIil111I[35018] local loaderI1liiliIliIii1ll1ii = loaderi1l1IiilI1IIIil111I[35018] - loaderIlI1lI11Il1i1IlIili local loaderI11i1li1illllIiliIi = loaderi1l1IiilI1IIIil111I[86990] local loaderil1i1liIllllil1li11 = loaderi1l1IiilI1IIIil111I[122525] local loaderlIiIi1II1II11ll1Iii = loaderi1l1IiilI1IIIil111I[27309] if loaderiI1i1IlIllIIiIiiI1i < 19 then if loaderiI1i1IlIllIIiIiiI1i >= 9 then if loaderiI1i1IlIllIIiIiiI1i < 14 then if loaderiI1i1IlIllIIiIiiI1i < 11 then if loaderiI1i1IlIllIIiIiiI1i == 10 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 % loaderlIiIi1II1II11ll1Iii else local loaderI11iIIi1lI1ill1IllI = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] for loaderi1l1iIIlI1liI1i1Ii1 = loaderil1i1liIllllil1li11 + 1, loaderlIiIi1II1II11ll1Iii do loaderI11iIIi1lI1ill1IllI = loaderI11iIIi1lI1ill1IllI .. loaderIllil1ll11Ii1i1Iii1[loaderi1l1iIIlI1liI1i1Ii1] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderI11iIIi1lI1ill1IllI end elseif loaderiI1i1IlIllIIiIiiI1i >= 12 then if loaderiI1i1IlIllIIiIiiI1i == 13 then local loaderi1iliiII1iiIIi1iiIl = loaderIIIIllIi1lIl11iiIl1[loaderIl1li1ilI1lii1IillI] local loaderlIl11111lllIIlIiI11l1 = {} if loaderi1iliiII1iiIIi1iiIl[loaderlIl1IIl1illlIiliIii1i] > 0 then do local loaderIiIl1Il11I1IlIIllIl = {} loaderlIl11111lllIIlIiI11l1 = loaderli1illiiIlil1lI1i1I({}, { __index = function(loaderliilliIlililIil1lii, loaderlIl1lilIIli1IIiiililI) local loaderlIlIiIIi1liIII1III1ii = loaderIiIl1Il11I1IlIIllIl[loaderlIl1lilIIli1IIiiililI] return loaderlIlIiIIi1liIII1III1ii[1][loaderlIlIiIIi1liIII1III1ii[2]] end, __newindex = function(loaderliilliIlililIil1lii, loaderlIl1lilIIli1IIiiililI, loaderlil1I1lil1IIllIIliI) local loaderlIlIiIIi1liIII1III1ii = loaderIiIl1Il11I1IlIIllIl[loaderlIl1lilIIli1IIiiililI] loaderlIlIiIIi1liIII1III1ii[1][loaderlIlIiIIi1liIII1III1ii[2]] = loaderlil1I1lil1IIllIIliI end }) for loaderi1l1iIIlI1liI1i1Ii1 = 1, loaderi1iliiII1iiIIi1iiIl[loaderlIl1IIl1illlIiliIii1i] do local loaderIill1Ii11I1iil1iill = loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] if loaderIill1Ii11I1iil1iill[loaderlIliilIlllilIl1li1iIl] == loaderlIl1i1ilIIl1li1ii1I1l then loaderIiIl1Il11I1IlIIllIl[loaderi1l1iIIlI1liI1i1Ii1 - 1] = { loaderIllil1ll11Ii1i1Iii1, loaderIill1Ii11I1iil1iill[loaderliIl1illllliIiIIIil] } elseif loaderIill1Ii11I1iil1iill[loaderlIliilIlllilIl1li1iIl] == loaderII1li1IiiI1I1lII11i then loaderIiIl1Il11I1IlIIllIl[loaderi1l1iIIlI1liI1i1Ii1 - 1] = { loaderlIliiiliIilli11li1lii, loaderIill1Ii11I1iil1iill[loaderliIl1illllliIiIIIil] } end loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end loaderl1iIi1li1II1ilII1ll[#loaderl1iIi1li1II1ilII1ll + 1] = loaderIiIl1Il11I1IlIIllIl end end local loaderi1IiI11I1IiII1iilII = loaderlIIiIilii11111lIiI1(loaderi1iliiII1iiIIi1iiIl, loaderIIli1l1lll1i1i1lIii, loaderlIl11111lllIIlIiI11l1) loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderi1IiI11I1IiII1iilII else if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 / loaderlIiIi1II1II11ll1Iii end else loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + loaderI1liiliIliIii1ll1ii end elseif loaderiI1i1IlIllIIiIiiI1i < 16 then if loaderiI1i1IlIllIIiIiiI1i == 15 then loaderIIli1l1lll1i1i1lIii[loaderI1liI11ll11lIil1lll[loaderIl1li1ilI1lii1IillI][loaderlIllI1I11iIiliIIiilIl]] = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] else if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end if loaderil1i1liIllllil1li11 < loaderlIiIi1II1II11ll1Iii ~= (loaderI11i1li1illllIiliIi ~= 0) then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end end elseif loaderiI1i1IlIllIIiIiiI1i < 17 then local loaderI1l1li1iliiI1Illili, loaderlIl111iIllIlllili1i, loaderlllII1Ii1IIII1liiI1 if loaderil1i1liIllllil1li11 ~= 1 then if loaderil1i1liIllllil1li11 ~= 0 then loaderlIl111iIllIlllili1i = loaderI11i1li1illllIiliIi + loaderil1i1liIllllil1li11 - 1 else loaderlIl111iIllIlllili1i = loaderiIi1lllI11IIlIl1IIi end loaderlIl111iIllIlllili1i, loaderI1l1li1iliiI1Illili = loaderlIlII1IIiIliil1lllil1(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi](loaderIl1I1lllll11I1111Ii(loaderIllil1ll11Ii1i1Iii1, loaderI11i1li1illllIiliIi + 1, loaderlIl111iIllIlllili1i))) else loaderlIl111iIllIlllili1i, loaderI1l1li1iliiI1Illili = loaderlIlII1IIiIliil1lllil1(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi]()) end if loaderlIiIi1II1II11ll1Iii ~= 1 then if loaderlIiIi1II1II11ll1Iii ~= 0 then loaderlIl111iIllIlllili1i = loaderI11i1li1illllIiliIi + loaderlIiIi1II1II11ll1Iii - 2 else loaderlIl111iIllIlllili1i = loaderlIl111iIllIlllili1i + loaderI11i1li1illllIiliIi end loaderlllII1Ii1IIII1liiI1 = 0 for loaderi1l1iIIlI1liI1i1Ii1 = loaderI11i1li1illllIiliIi, loaderlIl111iIllIlllili1i do loaderlllII1Ii1IIII1liiI1 = loaderlllII1Ii1IIII1liiI1 + 1 loaderIllil1ll11Ii1i1Iii1[loaderi1l1iIIlI1liI1i1Ii1] = loaderI1l1li1iliiI1Illili[loaderlllII1Ii1IIII1liiI1] end end loaderiIi1lllI11IIlIl1IIi = loaderlIl111iIllIlllili1i - 1 elseif loaderiI1i1IlIllIIiIiiI1i == 18 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 - loaderlIiIi1II1II11ll1Iii else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 1] = loaderil1i1liIllllil1li11 loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11[loaderlIiIi1II1II11ll1Iii] end elseif loaderiI1i1IlIllIIiIiiI1i >= 4 then if loaderiI1i1IlIllIIiIiiI1i < 6 then if loaderiI1i1IlIllIIiIiiI1i ~= 5 then if loaderlIiIi1II1II11ll1Iii == 54 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 36, [86990] = (loaderI11i1li1illllIiliIi - 59) % 256, [122525] = (loaderil1i1liIllllil1li11 - 59) % 256, [35018] = 0 } elseif loaderlIiIi1II1II11ll1Iii == 232 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 28, [86990] = (loaderI11i1li1illllIiliIi - 52) % 256, [122525] = (loaderil1i1liIllllil1li11 - 52) % 256, [35018] = 0 } else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = #loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end else local loaderl1llIlIlllilii1I11l = (loaderlIiIi1II1II11ll1Iii - 1) * 50 if loaderil1i1liIllllil1li11 == 0 then loaderil1i1liIllllil1li11 = loaderiIi1lllI11IIlIl1IIi - loaderI11i1li1illllIiliIi end for loaderi1l1iIIlI1liI1i1Ii1 = 1, loaderil1i1liIllllil1li11 do loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi][loaderl1llIlIlllilii1I11l + loaderi1l1iIIlI1liI1i1Ii1] = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + loaderi1l1iIIlI1liI1i1Ii1] end end elseif loaderiI1i1IlIllIIiIiiI1i >= 7 then if loaderiI1i1IlIllIIiIiiI1i == 8 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 + loaderlIiIi1II1II11ll1Iii else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = -loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end elseif loaderil1i1liIllllil1li11 == 228 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 33, [86990] = (loaderI11i1li1illllIiliIi - 2) % 256, [122525] = (loaderlIiIi1II1II11ll1Iii - 2) % 256, [35018] = 0 } elseif loaderil1i1liIllllil1li11 == 60 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 26, [86990] = (loaderI11i1li1illllIiliIi - 69) % 256, [122525] = (loaderlIiIi1II1II11ll1Iii - 69) % 256, [35018] = 0 } else local loaderl1llIlIlllilii1I11l = loaderI11i1li1illllIiliIi + 2 local loaderI11iIIi1lI1ill1IllI = { loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi](loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 1], loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 2]) } for loaderi1l1iIIlI1liI1i1Ii1 = 1, loaderlIiIi1II1II11ll1Iii do loaderIllil1ll11Ii1i1Iii1[loaderl1llIlIlllilii1I11l + loaderi1l1iIIlI1liI1i1Ii1] = loaderI11iIIi1lI1ill1IllI[loaderi1l1iIIlI1liI1i1Ii1] end if loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 3] ~= nil then loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 2] = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 3] else loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end end elseif loaderiI1i1IlIllIIiIiiI1i < 2 then if loaderiI1i1IlIllIIiIiiI1i == 1 then loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = not loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderI1liI11ll11lIil1lll[loaderIl1li1ilI1lii1IillI][loaderlIllI1I11iIiliIIiilIl] end elseif loaderiI1i1IlIllIIiIiiI1i ~= 3 then if loaderlIiIi1II1II11ll1Iii == 246 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 22, [86990] = (loaderI11i1li1illllIiliIi - 93) % 256, [27309] = (loaderil1i1liIllllil1li11 - 93) % 256, [35018] = 0 } else for loaderi1l1iIIlI1liI1i1Ii1 = loaderI11i1li1illllIiliIi, #loaderIllil1ll11Ii1i1Iii1 do local loaderIII11iliII1I11i1ili = loaderlii1i1l11i1Ii1ilI11 for loaderlIliiIiiIIll1lIIiil1l = 1, #loaderl1iIi1li1II1ilII1ll do local loaderlIlliii11ilIi11l1IlIl = loaderl1iIi1li1II1ilII1ll[loaderlIliiIiiIIll1lIIiil1l] for loaderIl1Il1IIliIl1i1ilII, loaderlIlIiIIi1liIII1III1ii in next, loaderlIlliii11ilIi11l1IlIl, nil do if loaderIllil1ll11Ii1i1Iii1 == loaderlIlIiIIi1liIII1III1ii[1] and loaderlIlIiIIi1liIII1III1ii[2] == loaderi1l1iIIlI1liI1i1Ii1 then if not loaderl1l1Ili1li11Iillli1[loaderIII11iliII1I11i1ili] then loaderl1l1Ili1li11Iillli1[loaderIII11iliII1I11i1ili] = loaderIllil1ll11Ii1i1Iii1[loaderi1l1iIIlI1liI1i1Ii1] loaderlii1i1l11i1Ii1ilI11 = loaderlii1i1l11i1Ii1ilI11 + 1 end loaderlIlliii11ilIi11l1IlIl[loaderIl1Il1IIliIl1i1ilII] = {loaderl1l1Ili1li11Iillli1, loaderIII11iliII1I11i1ili} end end end end end else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderiiil111l1lIi1l1I111(loaderiIIl1I1IIiIl1l11iII(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi]), "`for` initial value must be a number") loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 1] = loaderiiil111l1lIi1l1I111(loaderiIIl1I1IIiIl1l11iII(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 1]), "`for` limit value must be a number") loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 2] = loaderiiil111l1lIi1l1I111(loaderiIIl1I1IIiIl1l11iII(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 2]), "`for` step value must be a number") loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] - loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 2] loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + loaderI1liiliIliIii1ll1ii end elseif loaderiI1i1IlIllIIiIiiI1i >= 28 then if loaderiI1i1IlIllIIiIiiI1i < 33 then if loaderiI1i1IlIllIIiIiiI1i >= 30 then if loaderiI1i1IlIllIIiIiiI1i >= 31 then if loaderiI1i1IlIllIIiIiiI1i ~= 32 then loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = { loaderIl1I1lllll11I1111Ii(loaderlIl1ii1li1i11iii1iIll, 1, loaderil1i1liIllllil1li11 == 0 and 895 or loaderil1i1liIllllil1li11) } else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderlIliiiliIilli11li1lii[loaderil1i1liIllllil1li11] end else if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi][loaderil1i1liIllllil1li11] = loaderlIiIi1II1II11ll1Iii end elseif loaderiI1i1IlIllIIiIiiI1i ~= 29 then if loaderil1i1liIllllil1li11 == 1 then return true end local loaderlIl111iIllIlllili1i = loaderI11i1li1illllIiliIi + loaderil1i1liIllllil1li11 - 2 if loaderil1i1liIllllil1li11 == 0 then loaderlIl111iIllIlllili1i = loaderiIi1lllI11IIlIl1IIi end return true, loaderI11i1li1illllIiliIi, loaderlIl111iIllIlllili1i else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 ~= 0 if loaderlIiIi1II1II11ll1Iii ~= 0 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end end elseif loaderiI1i1IlIllIIiIiiI1i >= 35 then if loaderiI1i1IlIllIIiIiiI1i >= 36 then if loaderiI1i1IlIllIIiIiiI1i == 37 then loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderIIli1l1lll1i1i1lIii[loaderI1liI11ll11lIil1lll[loaderIl1li1ilI1lii1IillI][loaderlIllI1I11iIiliIIiilIl]] elseif loaderlIiIi1II1II11ll1Iii == 239 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 2, [86990] = (loaderI11i1li1illllIiliIi - 120) % 256, [122525] = (loaderil1i1liIllllil1li11 - 120) % 256, [35018] = 0 } else for loaderi1l1iIIlI1liI1i1Ii1 = loaderI11i1li1illllIiliIi, loaderil1i1liIllllil1li11 do loaderIllil1ll11Ii1i1Iii1[loaderi1l1iIIlI1liI1i1Ii1] = nil end end else local loaderiIliIl1IiIIiil1l1li = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 2] local loaderllI1IIlIliiliIi1ll1 = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] + loaderiIliIl1IiIIiil1l1li loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderllI1IIlIliiliIi1ll1 if loaderiIliIl1IiIIiil1l1li > 0 then if loaderllI1IIlIliiliIi1ll1 <= loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 1] then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + loaderI1liiliIliIii1ll1ii loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 3] = loaderllI1IIlIliiliIi1ll1 end elseif loaderllI1IIlIliiliIi1ll1 >= loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 1] then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + loaderI1liiliIliIii1ll1ii loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi + 3] = loaderllI1IIlIliiliIi1ll1 end end elseif loaderiI1i1IlIllIIiIiiI1i == 34 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end if loaderil1i1liIllllil1li11 == loaderlIiIi1II1II11ll1Iii ~= (loaderI11i1li1illllIiliIi ~= 0) then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end elseif loaderlIiIi1II1II11ll1Iii == 41 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 4, [86990] = (loaderI11i1li1illllIiliIi - 78) % 256, [122525] = (loaderil1i1liIllllil1li11 - 78) % 256, [35018] = 0 } else loaderlIliiiliIilli11li1lii[loaderil1i1liIllllil1li11] = loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] end elseif loaderiI1i1IlIllIIiIiiI1i >= 23 then if loaderiI1i1IlIllIIiIiiI1i >= 25 then if loaderiI1i1IlIllIIiIiiI1i < 26 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end if loaderil1i1liIllllil1li11 <= loaderlIiIi1II1II11ll1Iii ~= (loaderI11i1li1illllIiliIi ~= 0) then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end elseif loaderiI1i1IlIllIIiIiiI1i ~= 27 then if loaderlIiIi1II1II11ll1Iii == 160 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 24, [86990] = (loaderI11i1li1illllIiliIi - 122) % 256, [122525] = (loaderil1i1liIllllil1li11 - 122) % 256, [35018] = 0 } elseif loaderlIiIi1II1II11ll1Iii == 235 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 7, [86990] = (loaderI11i1li1illllIiliIi - 22) % 256, [122525] = (loaderil1i1liIllllil1li11 - 22) % 256, [35018] = 0 } elseif loaderlIiIi1II1II11ll1Iii == 215 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 1, [86990] = (loaderI11i1li1illllIiliIi - 92) % 256, [122525] = (loaderil1i1liIllllil1li11 - 92) % 256, [35018] = 0 } elseif loaderlIiIi1II1II11ll1Iii == 243 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 6, [86990] = (loaderI11i1li1illllIiliIi - 89) % 256, [27309] = (loaderil1i1liIllllil1li11 - 89) % 256, [35018] = 0 } else local loaderii11ii1Iiil1Il11l11 = loaderil1i1liIllllil1li11 > 0 and loaderil1i1liIllllil1li11 - 1 or loaderilII11iiI1iIii11iII - loaderl1iIIi1i11I1llIli1l if loaderii11ii1Iiil1Il11l11 < 0 then loaderii11ii1Iiil1Il11l11 = -1 end for loaderi1l1iIIlI1liI1i1Ii1 = loaderI11i1li1illllIiliIi, loaderI11i1li1illllIiliIi + loaderii11ii1Iiil1Il11l11 do loaderIllil1ll11Ii1i1Iii1[loaderi1l1iIIlI1liI1i1Ii1] = loaderl1IlIliIl1lli1lIl1l[loaderl1iIIi1i11I1llIli1l + (loaderi1l1iIIlI1liI1i1Ii1 - loaderI11i1li1illllIiliIi) + 1] end loaderiIi1lllI11IIlIl1IIi = loaderI11i1li1illllIiliIi + loaderii11ii1Iiil1Il11l11 end else local loaderI1l1li1iliiI1Illili, loaderlIl111iIllIlllili1i if loaderil1i1liIllllil1li11 ~= 1 then if loaderil1i1liIllllil1li11 ~= 0 then loaderlIl111iIllIlllili1i = loaderI11i1li1illllIiliIi + loaderil1i1liIllllil1li11 - 1 else loaderlIl111iIllIlllili1i = loaderiIi1lllI11IIlIl1IIi end loaderlIl111iIllIlllili1i, loaderI1l1li1iliiI1Illili = loaderlIlII1IIiIliil1lllil1(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi](loaderIl1I1lllll11I1111Ii(loaderIllil1ll11Ii1i1Iii1, loaderI11i1li1illllIiliIi + 1, loaderlIl111iIllIlllili1i))) else loaderlIl111iIllIlllili1i, loaderI1l1li1iliiI1Illili = loaderlIlII1IIiIliil1lllil1(loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi]()) end loaderIllil1ll11Ii1i1Iii1 = loaderI1l1li1iliiI1Illili return true, 1, loaderlIl111iIllIlllili1i end elseif loaderiI1i1IlIllIIiIiiI1i == 24 then loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] elseif not not loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] == (loaderlIiIi1II1II11ll1Iii == 0) then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 else loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end elseif loaderiI1i1IlIllIIiIiiI1i >= 21 then if loaderiI1i1IlIllIIiIiiI1i ~= 22 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 ^ loaderlIiIi1II1II11ll1Iii elseif loaderil1i1liIllllil1li11 == 199 then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I - 1 loaderlIlIlIiIi1Il1lli1I1Ii[loaderiII1l1I11liiiIiIl1I] = { [31473] = 32, [86990] = (loaderI11i1li1illllIiliIi - 173) % 256, [122525] = (loaderlIiIi1II1II11ll1Iii - 173) % 256, [35018] = 0 } elseif not not loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] == (loaderlIiIi1II1II11ll1Iii == 0) then loaderiII1l1I11liiiIiIl1I = loaderiII1l1I11liiiIiIl1I + 1 end elseif loaderiI1i1IlIllIIiIiiI1i ~= 20 then if loaderil1i1liIllllil1li11 > 255 then loaderil1i1liIllllil1li11 = loaderI1liI11ll11lIil1lll[loaderil1i1liIllllil1li11 - 256][loaderlIllI1I11iIiliIIiilIl] else loaderil1i1liIllllil1li11 = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11] end if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderil1i1liIllllil1li11 * loaderlIiIi1II1II11ll1Iii else if loaderlIiIi1II1II11ll1Iii > 255 then loaderlIiIi1II1II11ll1Iii = loaderI1liI11ll11lIil1lll[loaderlIiIi1II1II11ll1Iii - 256][loaderlIllI1I11iIiliIIiilIl] else loaderlIiIi1II1II11ll1Iii = loaderIllil1ll11Ii1i1Iii1[loaderlIiIi1II1II11ll1Iii] end loaderIllil1ll11Ii1i1Iii1[loaderI11i1li1illllIiliIi] = loaderIllil1ll11Ii1i1Iii1[loaderil1i1liIllllil1li11][loaderlIiIi1II1II11ll1Iii] end end end local loaderlII1Ii1iiI1i1illl11, loaderlIl1llii1lllI1l11li1i, loaderl1i1iiiilIl1Ii1lIll, loaderII1iIlil1i11i11II1I = loaderI1iIliliIi1l1lIIiII(loaderlllII1Ii1IIII1liiI1) if loaderlII1Ii1iiI1i1illl11 then if loaderl1i1iiiilIl1Ii1lIll then return loaderIl1I1lllll11I1111Ii(loaderIllil1ll11Ii1i1Iii1, loaderl1i1iiiilIl1Ii1lIll, loaderII1iIlil1i11i11II1I) end else local loaderlIlIlIlliIIilIlli11II = loaderlIlIiIlilillIIl1iIII1("Luraph Script:" .. (loaderI1lIiil1l11lIl1iiIl[loaderiII1l1I11liiiIiIl1I - 1] or "") .. ": " .. loaderiili1lililiI1iIIIll(loaderlIl1llii1lllI1l11li1i), "[^:]+:%d*: ", function(loaderi1li11lIIi1ll1ilIl1) if not loaderIl1i1i1IiI1lll11lil(loaderi1li11lIIi1ll1ilIl1, "Luraph Script:%d") then return "" end end) loaderlIlliIi1II11Il1ii11Il(loaderlIlIlIlliIIilIlli11II, 0) end end loaderlIll1iIlIii11ll1i1Ili(loaderlIll1IIl1Il1ii1IIII1i, loaderIIli1l1lll1i1i1lIii) return loaderlIll1IIl1Il1ii1IIII1i end local loaderiIIll1lIiII1Il1l1iI = loaderlIliII1IiI1iii1illIil() return loaderlIIiIilii11111lIiI1(loaderiIIll1lIiII1Il1l1iI, loaderIIli1l1lll1i1i1lIii)() end loaderlI1Ili1Iil11iIIlloaderli1iIIll1iII1I1iIii()) 
